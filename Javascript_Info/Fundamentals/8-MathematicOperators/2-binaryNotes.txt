These binary operators are available in JavaScript:
- Addition (+)
- Subtraction (-)
- Multiplication (*)
- Division (/)
- Remainder (%)
- Exponentiation (**)

================================================================================================
Remainder (%)
- Returns the remainder of dividing 2 numbers.

alert( 5 % 2 ); // 1, a remainder of 5 divided by 2
alert( 8 % 3 ); // 2, a remainder of 8 divided by 3

================================================================================================
Exponentiation (**)
- Returns the result of raising number A to the power of B.

alert( 2 ** 2 ); // 2² = 4
alert( 2 ** 3 ); // 2³ = 8
alert( 2 ** 4 ); // 2⁴ = 16

We can use 1/2 and 1/3 for square roots and cube roots.

alert( 4 ** (1/2) ); // 2 (power of 1/2 is the same as a square root)
alert( 8 ** (1/3) ); // 2 (power of 1/3 is the same as a cubic root)

================================================================================================
String concatenation with binary + operator
When binary addition operator is used for strings, it concatenates the strings.

let s = "my" + "Money";
alert(s); // myMoney

If any of the operands is a string, then concatenation happens.
alert( '1' + 2 ); // "12"
alert( 2 + '1' ); // "21"

alert( 2 + 2 + '1' ); // "41" and not "221"
Why? The first operator detects 2 numbers so addition happens.

alert('1' + 2 + 2); // "122" and not "14"
Why? The second operator obtains a string from '1' + 2.

Other mathematical operators will always try to convert the operands into numbers.
alert( 6 - '2' ); // 4, converts '2' to a number
alert( '6' / '2' ); // 3, converts both operands to numbers